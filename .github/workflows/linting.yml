name: Format & Lint
on: [push]

jobs:
  formatting:
    runs-on: ubuntu-latest
    name: black Formatting
    steps:
      - name: Check Out Source Repository
        uses: actions/checkout@v4

      - name: Set Up Python Environment
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          version: 1.5.1
          virtualenvs-create: true
          virtualenvs-in-project: true
      
      - name: Load Cached venv
        id: cached-poetry-dependencies
        uses: actions/cache@v4
        with:
          path: .venv
          key: venv-${{ runner.os }}-${{ steps.setup-python.outputs.python-version }}-${{ hashFiles('**/poetry.lock') }}

      - name: Install Dependencies
        if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
        run: 
          poetry install --no-interaction --no-root --only dev  

      - name: Formatting
        run: 
          poetry run black . --check

  linting:
    runs-on: ubuntu-latest
    name: flake8 Linting
    steps:
      - name: Check Out Source Repository
        uses: actions/checkout@v4

      - name: Set Up Python Environment
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          virtualenvs-create: true
          virtualenvs-in-project: true

      - name: Load Cached venv
        id: cached-poetry-dependencies
        uses: actions/cache@v4
        with:
          path: .venv
          key: venv-${{ runner.os }}-${{ steps.setup-python.outputs.python-version }}-${{ hashFiles('**/poetry.lock') }}

      - name: Install Dependencies
        if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
        run: 
          poetry install --no-interaction --no-root --only dev     

      - name: Linting
        uses: py-actions/flake8@v2
        with:
          plugins: "flake8-black Flake8-pyproject"
